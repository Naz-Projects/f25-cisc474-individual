/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login'
import { Route as InstructorDashboardRouteImport } from './routes/instructor-dashboard'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as AdminDashboardRouteImport } from './routes/admin-dashboard'
import { Route as IndexRouteImport } from './routes/index'

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const InstructorDashboardRoute = InstructorDashboardRouteImport.update({
  id: '/instructor-dashboard',
  path: '/instructor-dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminDashboardRoute = AdminDashboardRouteImport.update({
  id: '/admin-dashboard',
  path: '/admin-dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin-dashboard': typeof AdminDashboardRoute
  '/dashboard': typeof DashboardRoute
  '/instructor-dashboard': typeof InstructorDashboardRoute
  '/login': typeof LoginRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/admin-dashboard': typeof AdminDashboardRoute
  '/dashboard': typeof DashboardRoute
  '/instructor-dashboard': typeof InstructorDashboardRoute
  '/login': typeof LoginRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/admin-dashboard': typeof AdminDashboardRoute
  '/dashboard': typeof DashboardRoute
  '/instructor-dashboard': typeof InstructorDashboardRoute
  '/login': typeof LoginRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin-dashboard'
    | '/dashboard'
    | '/instructor-dashboard'
    | '/login'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/admin-dashboard'
    | '/dashboard'
    | '/instructor-dashboard'
    | '/login'
  id:
    | '__root__'
    | '/'
    | '/admin-dashboard'
    | '/dashboard'
    | '/instructor-dashboard'
    | '/login'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminDashboardRoute: typeof AdminDashboardRoute
  DashboardRoute: typeof DashboardRoute
  InstructorDashboardRoute: typeof InstructorDashboardRoute
  LoginRoute: typeof LoginRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/instructor-dashboard': {
      id: '/instructor-dashboard'
      path: '/instructor-dashboard'
      fullPath: '/instructor-dashboard'
      preLoaderRoute: typeof InstructorDashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin-dashboard': {
      id: '/admin-dashboard'
      path: '/admin-dashboard'
      fullPath: '/admin-dashboard'
      preLoaderRoute: typeof AdminDashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminDashboardRoute: AdminDashboardRoute,
  DashboardRoute: DashboardRoute,
  InstructorDashboardRoute: InstructorDashboardRoute,
  LoginRoute: LoginRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.tsx'
import type { createStart } from '@tanstack/react-start'
declare module '@tanstack/react-start' {
  interface Register {
    ssr: true
    router: Awaited<ReturnType<typeof getRouter>>
  }
}
